{
  // Place your Hotel-AI 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "taro component": {
    "scope": "javascript",
    "prefix": "taroc",
    "body": [
      "import Taro, { Component } from \"@tarojs/taro\";",
      "import { View } from \"@tarojs/components\";",
      "",
      "export default class ${1:index} extends Component {",
      "  static defaultProps = {$2};",
      "",
      "  state = {$3}",
      "",
      "  propsKeys = [];",
      "",
      "  stateKeys = [];",
      "",
      "  shouldComponentUpdate(nextProps, nextState) {",
      "    console.log(\"${1:index}\",nextProps, nextState);",
      "    let flag = !this.compare(nextProps, nextState);",
      "    return flag;",
      "  }",
      "",
      "  componentWillUpdate() {",
      "    console.time(\"${1:index}\");",
      "  }",
      "",
      "  componentDidUpdate() {",
      "    console.timeEnd(\"${1:index}\");",
      "  }",
      "",
      "  render() {",
      "    return (",
      "      <View>$5</View>",
      "    );",
      "  }",
      "}",
      ""
    ],
    "description": "快速创建taro组件"
  },
  "update timer": {
    "scope": "javascript",
    "prefix": "timer",
    "body": [
      "componentWillUpdate() {",
      "  console.time(\"${1:index}\");",
      "}",
      "",
      "componentDidUpdate() {",
      "  console.timeEnd(\"${1:index}\");",
      "}"
    ],
    "description": "update timer"
  },
  "compare keys": {
    "scope": "javascript",
    "prefix": "cmpkeys",
    "body": ["propsKeys = [];", "", "stateKeys = [];"],
    "description": "taro compare keys"
  },
  "compare": {
    "scope": "javascript",
    "prefix": "cmp",
    "body": [
      "let flag = !this.compare(nextProps, nextState);",
      "return flag;",
    ],
    "description": "taro, compare before update"
  }
}
